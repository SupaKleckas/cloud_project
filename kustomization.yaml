apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\Users\RutaAdmin\AppData\Local\Microsoft\WinGet\Packages\Kubernetes.kompose_Microsoft.Winget.Source_8wekyb3d8bbwe\kompose.exe --file docker-compose.yml convert
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    io.kompose.service: apigateway
  name: apigateway
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: apigateway
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: C:\Users\RutaAdmin\AppData\Local\Microsoft\WinGet\Packages\Kubernetes.kompose_Microsoft.Winget.Source_8wekyb3d8bbwe\kompose.exe --file docker-compose.yml convert
        kompose.version: 1.31.2 (a92241f79)
      creationTimestamp: null
      labels:
        io.kompose.network/studentsapi-default: "true"
        io.kompose.service: apigateway
    spec:
      containers:
        - env:
            - name: ASPNETCORE_ENVIRONMENT
              value: Development
          image: apigateway
          name: apigateway
          ports:
            - containerPort: 80
              hostPort: 5083
              protocol: TCP
          resources: {}
      restartPolicy: Always
status: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: C:\Users\RutaAdmin\AppData\Local\Microsoft\WinGet\Packages\Kubernetes.kompose_Microsoft.Winget.Source_8wekyb3d8bbwe\kompose.exe --file docker-compose.yml convert
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    io.kompose.service: apigateway
  name: apigateway
spec:
  ports:
    - name: "5083"
      port: 5083
      targetPort: 80
  selector:
    io.kompose.service: apigateway
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\Users\RutaAdmin\AppData\Local\Microsoft\WinGet\Packages\Kubernetes.kompose_Microsoft.Winget.Source_8wekyb3d8bbwe\kompose.exe --file docker-compose.yml convert
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    io.kompose.service: coursesapi
  name: coursesapi
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: coursesapi
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: C:\Users\RutaAdmin\AppData\Local\Microsoft\WinGet\Packages\Kubernetes.kompose_Microsoft.Winget.Source_8wekyb3d8bbwe\kompose.exe --file docker-compose.yml convert
        kompose.version: 1.31.2 (a92241f79)
      creationTimestamp: null
      labels:
        io.kompose.network/studentsapi-default: "true"
        io.kompose.service: coursesapi
    spec:
      containers:
        - env:
            - name: ASPNETCORE_ENVIRONMENT
              value: Development
            - name: ConnectionStrings__CoursesApiContext
              value: Server=sqldata;Database=CoursesDB;User Id=sa;Password=Test!@123123
            - name: MessageBroker__Host
              value: amqp://user:Test123123@rabbitmq:5672
          image: coursesapi
          name: coursesapi
          ports:
            - containerPort: 80
              hostPort: 5082
              protocol: TCP
          resources: {}
      restartPolicy: Always
status: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: C:\Users\RutaAdmin\AppData\Local\Microsoft\WinGet\Packages\Kubernetes.kompose_Microsoft.Winget.Source_8wekyb3d8bbwe\kompose.exe --file docker-compose.yml convert
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    io.kompose.service: coursesapi
  name: coursesapi
spec:
  ports:
    - name: "5082"
      port: 5082
      targetPort: 80
  selector:
    io.kompose.service: coursesapi
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\Users\RutaAdmin\AppData\Local\Microsoft\WinGet\Packages\Kubernetes.kompose_Microsoft.Winget.Source_8wekyb3d8bbwe\kompose.exe --file docker-compose.yml convert
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    io.kompose.service: rabbitmq
  name: rabbitmq
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: rabbitmq
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: C:\Users\RutaAdmin\AppData\Local\Microsoft\WinGet\Packages\Kubernetes.kompose_Microsoft.Winget.Source_8wekyb3d8bbwe\kompose.exe --file docker-compose.yml convert
        kompose.version: 1.31.2 (a92241f79)
      creationTimestamp: null
      labels:
        io.kompose.network/studentsapi-default: "true"
        io.kompose.service: rabbitmq
    spec:
      containers:
        - env:
            - name: RABBITMQ_DEFAULT_PASS
              value: Test123123
            - name: RABBITMQ_DEFAULT_USER
              value: user
          image: rabbitmq:3-management
          name: rbtmq
          ports:
            - containerPort: 5672
              hostPort: 5672
              protocol: TCP
            - containerPort: 15672
              hostPort: 15672
              protocol: TCP
          resources: {}
      restartPolicy: Always
status: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: C:\Users\RutaAdmin\AppData\Local\Microsoft\WinGet\Packages\Kubernetes.kompose_Microsoft.Winget.Source_8wekyb3d8bbwe\kompose.exe --file docker-compose.yml convert
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    io.kompose.service: rabbitmq
  name: rabbitmq
spec:
  ports:
    - name: "5672"
      port: 5672
      targetPort: 5672
    - name: "15672"
      port: 15672
      targetPort: 15672
  selector:
    io.kompose.service: rabbitmq
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\Users\RutaAdmin\AppData\Local\Microsoft\WinGet\Packages\Kubernetes.kompose_Microsoft.Winget.Source_8wekyb3d8bbwe\kompose.exe --file docker-compose.yml convert
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    io.kompose.service: sqldata
  name: sqldata
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: sqldata
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: C:\Users\RutaAdmin\AppData\Local\Microsoft\WinGet\Packages\Kubernetes.kompose_Microsoft.Winget.Source_8wekyb3d8bbwe\kompose.exe --file docker-compose.yml convert
        kompose.version: 1.31.2 (a92241f79)
      creationTimestamp: null
      labels:
        io.kompose.network/studentsapi-default: "true"
        io.kompose.service: sqldata
    spec:
      containers:
        - env:
            - name: ACCEPT_EULA
              value: "Y"
            - name: SA_PASSWORD
              value: Test!@123123
          image: mcr.microsoft.com/mssql/server:2019-latest
          name: sqldata
          ports:
            - containerPort: 1433
              hostPort: 1433
              protocol: TCP
          resources: {}
      restartPolicy: Always
status: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: C:\Users\RutaAdmin\AppData\Local\Microsoft\WinGet\Packages\Kubernetes.kompose_Microsoft.Winget.Source_8wekyb3d8bbwe\kompose.exe --file docker-compose.yml convert
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    io.kompose.service: sqldata
  name: sqldata
spec:
  ports:
    - name: "1433"
      port: 1433
      targetPort: 1433
  selector:
    io.kompose.service: sqldata
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\Users\RutaAdmin\AppData\Local\Microsoft\WinGet\Packages\Kubernetes.kompose_Microsoft.Winget.Source_8wekyb3d8bbwe\kompose.exe --file docker-compose.yml convert
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    io.kompose.service: studentsapi
  name: studentsapi
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: studentsapi
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: C:\Users\RutaAdmin\AppData\Local\Microsoft\WinGet\Packages\Kubernetes.kompose_Microsoft.Winget.Source_8wekyb3d8bbwe\kompose.exe --file docker-compose.yml convert
        kompose.version: 1.31.2 (a92241f79)
      creationTimestamp: null
      labels:
        io.kompose.network/studentsapi-default: "true"
        io.kompose.service: studentsapi
    spec:
      containers:
        - env:
            - name: ASPNETCORE_ENVIRONMENT
              value: Development
            - name: ConnectionStrings__StudentsAPIContext
              value: Server=sqldata;Database=StudentDB;User Id=sa;Password=Test!@123123
            - name: MessageBroker__Host
              value: amqp://user:Test123123@rabbitmq:5672
          image: studentsapi
          name: studentsapi
          ports:
            - containerPort: 80
              hostPort: 5081
              protocol: TCP
          resources: {}
      restartPolicy: Always
status: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: C:\Users\RutaAdmin\AppData\Local\Microsoft\WinGet\Packages\Kubernetes.kompose_Microsoft.Winget.Source_8wekyb3d8bbwe\kompose.exe --file docker-compose.yml convert
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    io.kompose.service: studentsapi
  name: studentsapi
spec:
  ports:
    - name: "5081"
      port: 5081
      targetPort: 80
  selector:
    io.kompose.service: studentsapi
status:
  loadBalancer: {}
